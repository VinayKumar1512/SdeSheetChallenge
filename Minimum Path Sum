public class Solution {
    public static int minSumPath(int[][] grid) {
    	
        int n= grid.length-1;
        int m=grid[0].length-1;
        int dp[][]=new int[n+1][m+1];
      return  minCost(grid,0,0,n,m,dp);
    }
    
    public static int minCost(int grid[][],int sr,int sc,int dr,int dc,int dp[][]){
        
        if(sr==dr && sc==dc){
            return grid[sr][sc];
        }
        
        if(sr > dr || sc > dc){
            return 10000000;
        }
        
        if(dp[sr][sc]!=0){
            return dp[sr][sc];
        }
        int f1 = grid[sr][sc] + minCost(grid,sr,sc+1,dr,dc,dp);
        int f2= grid[sr][sc] + minCost(grid,sr+1,sc,dr,dc,dp);
        
        int ans= Math.min(f1,f2);
        dp[sr][sc]= ans;
        return ans;
    }
}
